{"remainingRequest":"D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1578403475201},{"path":"D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\AZY\\12VUEUI\\day05_am\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"tom\",\n      //用户名\n      upwd: 123 //密码\n\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      // 1.获取用户名和密码\n      var u = this.uname;\n      var p = this.upwd; // console.log(u+p);\n      // 2.格式：创建正则表达式 3-12位数 字母数字\n\n      var reg = /^[a-z0-9]{3,12}$/i; // 3.判断用户名 用户名提示 toast\n\n      if (!reg.test(u)) {\n        this.$toast(\"用户名格式不正确\");\n        return;\n      } // 4.判断密码 密码提示\n\n\n      if (!reg.test(p)) {\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // 5.发送请求 axios\n\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        // 6.响应数据(接收后台返回来的数据)\n        // console.log(res.data)\n        var code = res.data.code;\n\n        if (code == -1) {\n          // 7.失败 提示\n          _this.$messagebox(\"消息\", \"用户名或密码有误！\");\n        } else {\n          // 8.成功 跳转\n          _this.$router.push(\"/product\");\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,KADA;AACA;AACA,YAAA,GAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA,UAAA,IAAA,KAAA,KAAA;AACA,UAAA,IAAA,KAAA,IAAA,CAHA,CAIA;AACA;;AACA,UAAA,MAAA,mBAAA,CANA,CAOA;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA;AACA,OAXA,CAYA;;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OAhBA,CAiBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA;;AACA,YAAA,QAAA,CAAA,CAAA,EAAA;AACA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,WAAA;AACA,SAHA,MAGA;AACA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AAEA,OAZA;AAcA;AAnCA;AAPA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <h1>登录页面</h1>\r\n        <!-- 用户名的输入框 -->\r\n        <mt-field label=\"用户名\" placeholder=\"请输入用户名\" v-model=\"uname\"></mt-field>\r\n        <!-- 密码的输入框 -->\r\n        <mt-field label=\"密码\" placeholder=\"请输入密码\" v-model=\"upwd\"></mt-field>\r\n        <!-- 登录按钮 单击事件 -->\r\n        <mt-button size=\"large\" @click=\"login\">登 录</mt-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            uname:\"tom\",//用户名\r\n            upwd:123 //密码\r\n        }\r\n    },\r\n    methods: {\r\n        login(){\r\n            // 1.获取用户名和密码\r\n            var u = this.uname;\r\n            var p = this.upwd;\r\n            // console.log(u+p);\r\n            // 2.格式：创建正则表达式 3-12位数 字母数字\r\n            var reg = /^[a-z0-9]{3,12}$/i;\r\n            // 3.判断用户名 用户名提示 toast\r\n            if(!reg.test(u)){\r\n                this.$toast(\"用户名格式不正确\");\r\n                return;\r\n            }\r\n            // 4.判断密码 密码提示\r\n            if(!reg.test(p)){\r\n                this.$toast(\"密码格式不正确\");\r\n                return;\r\n            }\r\n            // 5.发送请求 axios\r\n            var url=\"login\";\r\n            var obj={uname:u,upwd:p};\r\n            this.axios.get(url,{params:obj}).then(res=>{\r\n                // 6.响应数据(接收后台返回来的数据)\r\n                // console.log(res.data)\r\n                var code=res.data.code;              \r\n                if(code==-1){\r\n                    // 7.失败 提示\r\n                    this.$messagebox(\"消息\",\"用户名或密码有误！\")\r\n                }else{\r\n                    // 8.成功 跳转\r\n                    this.$router.push(\"/product\")                    \r\n                }\r\n                \r\n            })\r\n            \r\n        }\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src\\components\\xz"}]}